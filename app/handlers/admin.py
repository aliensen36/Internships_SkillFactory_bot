import os
from aiofiles import open as aio_open
from aiogram.types import FSInputFile
from aiogram import F, Router, Bot
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from sqlalchemy.ext.asyncio import AsyncSession
from app.filters.chat_types import ChatTypeFilter, IsAdmin
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from sqlalchemy import select, func
from datetime import datetime, timedelta
from collections import defaultdict
from app.keyboards.reply import kb_admin_main
from database.models import User, Specialization, Course, Broadcast

admin_router = Router()
admin_router.message.filter(ChatTypeFilter(["private"]), IsAdmin())


@admin_router.message(Command("admin"))
async def confirmation(message: Message):
    await message.answer("–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=kb_admin_main)


@admin_router.message(F.text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
async def show_statistics(message: Message, session: AsyncSession):
    total_users = await session.scalar(select(func.count()).select_from(User))
    total_specializations = await session.scalar(select(func.count()).select_from(Specialization))
    total_courses = await session.scalar(select(func.count()).select_from(Course))

    text = (
    "<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á–∞—Ç-–±–æ—Ç–∞:</b>\n\n"
    f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{total_users}</b>\n\n"
    f"üéØ –í—Å–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π: <b>{total_specializations}</b>\n\n"
    f"üìö –í—Å–µ–≥–æ –∫—É—Ä—Å–æ–≤: <b>{total_courses}</b>\n\n"
    # f"üó£ –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: <b>{total_feedbacks}</b>\n"
    )

    await message.answer(text, parse_mode="HTML", reply_markup=kb_admin_main)

