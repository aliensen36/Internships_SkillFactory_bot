from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from app.filters.chat_types import ChatTypeFilter, IsAdmin
from app.fsm_states import SpecializationStates
from app.keyboards.reply import kb_specializations_courses, kb_specializations
from database.models import Specialization

admin_spec_course_router = Router()
admin_spec_course_router.message.filter(ChatTypeFilter(["private"]), IsAdmin())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìö –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –∫—É—Ä—Å—ã"
@admin_spec_course_router.message(F.text == "üìö –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –∫—É—Ä—Å—ã")
async def specializations_and_courses(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
                         reply_markup=kb_specializations_courses)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏'
@admin_spec_course_router.message(F.text == 'üéØ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏')
async def specializations_and_courses(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
                         reply_markup=kb_specializations)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '‚ûï –î–æ–±–∞–≤–∏—Ç—å'
@admin_spec_course_router.message(F.text == '‚ûï –î–æ–±–∞–≤–∏—Ç—å')
async def add_specialization_start(message: Message, state: FSMContext):
    await state.set_state(SpecializationStates.waiting_for_specialization_name)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:")


@admin_spec_course_router.message(SpecializationStates.waiting_for_specialization_name)
async def add_specialization_save(message: Message, state: FSMContext, session: AsyncSession):
    name = message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç
    existing = await session.execute(
        select(Specialization).where(Specialization.name == name)
    )
    if existing.scalar():
        await message.answer("‚ùó –¢–∞–∫–∞—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
        return

    new_specialization = Specialization(name=name)
    session.add(new_specialization)
    await session.commit()

    await message.answer(f"‚úÖ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ¬´{name}¬ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!",
                         reply_markup=kb_specializations)
    await state.clear()
