from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from app.constants import COURSE_TITLES
from app.keyboards.inline import kb_change_specialization, change_courses_keyboard
from app.keyboards.reply import kb_profile, kb_main
from database.models import User

profile_router = Router()

@profile_router.message(F.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def profile_handler(message: Message, session: AsyncSession):
    stmt = select(User).where(User.tg_id == message.from_user.id)
    result = await session.execute(stmt)
    user = result.scalar_one_or_none()

    if user:
        specialization = user.specialization or "–Ω–µ –≤—ã–±—Ä–∞–Ω–æ"
        course = user.course or "–Ω–µ –≤—ã–±—Ä–∞–Ω"
        await message.answer(
            f"üë§ <b>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
            f"üî∏ –í—ã–±—Ä–∞–Ω–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: <b>{specialization}</b>\n\n"
            f"üîπ –í—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É—Ä—Å: <b>{course}</b>",
            parse_mode="HTML",
            reply_markup=kb_profile
        )
    else:
        await message.answer("–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ /start.")


@profile_router.message(F.text == "üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
async def change_specialization(message: Message):
    await message.answer(
        "üéØ –í—ã–±–µ—Ä–∏ –Ω–æ–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:",
        reply_markup=kb_change_specialization
    )

@profile_router.callback_query(F.data.startswith("profile_spec_"))
async def change_specialization(callback: CallbackQuery,
                                       session: AsyncSession):

    spec = callback.data.replace("profile_spec_", "")

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user_id = callback.from_user.id
    async with session.begin():
        result = await session.execute(select(User).filter(User.tg_id == user_id))
        user = result.scalars().first()

        if user:
            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            user.specialization = spec
            await session.commit()

            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ
            await callback.message.edit_text(f"‚úÖ –í—ã–±—Ä–∞–Ω–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: <b>{spec}</b> üéØ",
                                             parse_mode="HTML")

        else:
            await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


@profile_router.message(F.text == "üîÅ –ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å")
async def change_course(message: Message, session: AsyncSession):
    await message.answer(
        "üéØ –í—ã–±–µ—Ä–∏ –Ω–æ–≤—ã–π –∫—É—Ä—Å, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:",
        reply_markup=change_courses_keyboard()
    )

@profile_router.callback_query(F.data.startswith("change_course_"))
async def change_courses(callback: CallbackQuery, session: AsyncSession):
    course = callback.data.replace("change_course_", "")
    course_title = COURSE_TITLES.get(course, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫—É—Ä—Å")  # –ò—â–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user_id = callback.from_user.id
    async with session.begin():
        result = await session.execute(select(User).filter(User.tg_id == user_id))
        user = result.scalars().first()

        if user:
            user.course = course
            await session.commit()
            await callback.message.edit_text(f"‚úÖ –í—ã–±—Ä–∞–Ω –∫—É—Ä—Å: <b>{course_title}</b> üéØ",
                                                 parse_mode="HTML")

        else:
            await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

@profile_router.callback_query(F.data.startswith("page_"))
async def page_navigation(callback: CallbackQuery):
    page = int(callback.data.replace("page_", ""))
    keyboard = change_courses_keyboard(page)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫—É—Ä—Å–∞–º–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    await callback.message.edit_text(
        text=f"üéì –í—ã–±–µ—Ä–∏ –∫—É—Ä—Å (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1}):",
        reply_markup=keyboard
    )
    await callback.answer()

@profile_router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def back_to_main_menu(message: Message):
    await message.answer("üîô –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=kb_main)
