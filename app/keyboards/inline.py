from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.constants import COURSE_TITLES, courses, change_courses


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_menu_keyboard():
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üíº –°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞", callback_data="internship")
    keyboard.button(text="üèÅ –•–∞–∫–∞—Ç–æ–Ω—ã", callback_data="hackathons")
    keyboard.button(text="üöÄ –ú–µ–≥–∞—Ö–∞–∫–∞—Ç–æ–Ω—ã", callback_data="mega_hackathons")
    keyboard.button(text="üèÜ –ö–æ–Ω–∫—É—Ä—Å—ã", callback_data="contests")
    keyboard.button(text="üéÆ –ì–µ–π–º–¥–∂–µ–º—ã", callback_data="gamejams")
    keyboard.button(text="‚ú® –°–ø–µ—Ü–ø—Ä–æ–µ–∫—Ç—ã", callback_data="special_projects")
    keyboard.adjust(2)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    return keyboard.as_markup()


# –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—á–∏—Ç–∞—Ç—å" –¥–ª—è —Å–∫—Ä—ã—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
def get_hidden_text_keyboard(key: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìú –ü—Ä–æ—á–∏—Ç–∞—Ç—å", callback_data=key)]
        ]
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
kb_specialization = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üíª –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞", callback_data="spec_–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞")],
        [InlineKeyboardButton(text="üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="spec_–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")],
        [InlineKeyboardButton(text="üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ Data Science", callback_data="spec_–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ DS")],
        [InlineKeyboardButton(text="üé® –î–∏–∑–∞–π–Ω", callback_data="spec_–î–∏–∑–∞–π–Ω")],
        [InlineKeyboardButton(text="üìà –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –≤ IT", callback_data="spec_–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥")],
        [InlineKeyboardButton(text="üéì –í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", callback_data="spec_–í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")],
    ]
)


kb_change_specialization = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üíª –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞", callback_data="profile_spec_–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞")],
        [InlineKeyboardButton(text="üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="profile_spec_–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")],
        [InlineKeyboardButton(text="üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ Data Science", callback_data="profile_spec_–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ DS")],
        [InlineKeyboardButton(text="üé® –î–∏–∑–∞–π–Ω", callback_data="profile_spec_–î–∏–∑–∞–π–Ω")],
        [InlineKeyboardButton(text="üìà –ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥ –≤ IT", callback_data="profile_spec_–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥")],
        [InlineKeyboardButton(text="üéì –í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", callback_data="profile_spec_–í—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")],
    ]
)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
def courses_keyboard(page: int = 0):
    items_per_page = 4

    start_index = page * items_per_page
    end_index = start_index + items_per_page
    current_courses = courses[start_index:end_index]

    inline_keyboard = []

    # –ö–Ω–æ–ø–∫–∏ –∫—É—Ä—Å–æ–≤ —Å –ø–æ–ª–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    for name, callback_data in current_courses:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É –∏–∑ –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∫—É—Ä—Å–∞
        course_code = callback_data.replace("course_", "")

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞
        full_course_name = COURSE_TITLES.get(course_code, name)

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
        button = InlineKeyboardButton(text=full_course_name, callback_data=callback_data)
        inline_keyboard.append([button])

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navigation_buttons = []
    if page > 0:
        navigation_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                                                       callback_data=f"page_{page - 1}"))
    if end_index < len(courses):
        navigation_buttons.append(InlineKeyboardButton(text="‚û°Ô∏è –í–ø–µ—Ä–µ–¥",
                                                       callback_data=f"page_{page + 1}"))

    if navigation_buttons:
        inline_keyboard.append(navigation_buttons)

    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
def change_courses_keyboard(page: int = 0):
    items_per_page = 4

    start_index = page * items_per_page
    end_index = start_index + items_per_page
    current_courses = change_courses[start_index:end_index]

    inline_keyboard = []

    # –ö–Ω–æ–ø–∫–∏ –∫—É—Ä—Å–æ–≤ —Å –ø–æ–ª–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    for name, callback_data in current_courses:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É –∏–∑ –ø–æ–ª–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∫—É—Ä—Å–∞
        course_code = callback_data.replace("course_", "")

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞
        full_course_name = COURSE_TITLES.get(course_code, name)

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
        button = InlineKeyboardButton(text=full_course_name, callback_data=callback_data)
        inline_keyboard.append([button])

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navigation_buttons = []
    if page > 0:
        navigation_buttons.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                                                       callback_data=f"page_{page - 1}"))
    if end_index < len(courses):
        navigation_buttons.append(InlineKeyboardButton(text="‚û°Ô∏è –í–ø–µ—Ä–µ–¥",
                                                       callback_data=f"page_{page + 1}"))

    if navigation_buttons:
        inline_keyboard.append(navigation_buttons)

    return InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
